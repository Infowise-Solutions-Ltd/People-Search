<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddExtension" xml:space="preserve">
    <value>Agregar extensión</value>
  </data>
  <data name="AddExtensionDesc" xml:space="preserve">
    <value>Agregar extensión al nombre del archivo</value>
  </data>
  <data name="ADPath" xml:space="preserve">
    <value>Buscar ruta de raíz</value>
  </data>
  <data name="ADPathDesc" xml:space="preserve">
    <value>Búsqueda opcional ruta de raíz en formato LDAP://DC=domain, DC=com</value>
  </data>
  <data name="ErrorFormat" xml:space="preserve">
    <value>&lt;span class='ms-error'&gt;{0}&lt;/span&gt;</value>
    <comment>Do not translate</comment>
  </data>
  <data name="FeatureDesc" xml:space="preserve">
    <value>Búsquedas de los usuarios en Active Directory</value>
  </data>
  <data name="ImageField" xml:space="preserve">
    <value>Propiedad de nombre de archivo de imagen</value>
  </data>
  <data name="ImageFieldDesc" xml:space="preserve">
    <value>Perfil de Usuario propiedad de imagen que contiene el nombre del archivo</value>
  </data>
  <data name="ImageFolderUrl" xml:space="preserve">
    <value>URL de la carpeta de imágenes</value>
  </data>
  <data name="ImageFolderUrlDesc" xml:space="preserve">
    <value>URL de la carpeta que contiene todas las imágenes de los empleados</value>
  </data>
  <data name="ImageSize" xml:space="preserve">
    <value>Tamaño de la imagen</value>
  </data>
  <data name="ImageSizeDesc" xml:space="preserve">
    <value>Usuario tamaño de la imagen (la misma altura y anchura)</value>
  </data>
  <data name="IncludeImage" xml:space="preserve">
    <value>Incluir imágenes</value>
  </data>
  <data name="IncludeImageDesc" xml:space="preserve">
    <value>Incluye imágenes de los empleados en los resultados de búsqueda</value>
  </data>
  <data name="IncludeLabel" xml:space="preserve">
    <value>Incluya las etiquetas</value>
  </data>
  <data name="IncludeLabelDesc" xml:space="preserve">
    <value>Mostrar las propiedades con las etiquetas</value>
  </data>
  <data name="MaxResults" xml:space="preserve">
    <value>Máximos resultados</value>
  </data>
  <data name="MaxResultsDesc" xml:space="preserve">
    <value>El número máximo de resultados a devolver</value>
  </data>
  <data name="NoResults" xml:space="preserve">
    <value>La búsqueda no produjo resultados</value>
  </data>
  <data name="PhotoUrlField" xml:space="preserve">
    <value>photoURL</value>
  </data>
  <data name="Properties" xml:space="preserve">
    <value>Propiedades mostradas</value>
  </data>
  <data name="PropertiesDesc" xml:space="preserve">
    <value>Seleccione las propiedades del usuario para mostrar los resultados de búsqueda</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Buscar</value>
  </data>
  <data name="ShowSearchButton" xml:space="preserve">
    <value>Mostrar el botón Buscar</value>
  </data>
  <data name="ShowSearchButtonDesc" xml:space="preserve">
    <value>Mostrar el botón Buscar o simplemente haga clic en Enter</value>
  </data>
  <data name="TooManyResults" xml:space="preserve">
    <value>La búsqueda ha dado demasiados resultados. &lt;br/&gt; Por favor, delimitar los parámetros de búsqueda.</value>
  </data>
  <data name="SearchButtonText" xml:space="preserve">
    <value>Etiqueta del botón Buscar</value>
  </data>
  <data name="SearchButtonTextDesc" xml:space="preserve">
    <value>Especifique el texto que aparezca en el botón Buscar</value>
  </data>
  <data name="RequireExchangeAccount" xml:space="preserve">
    <value>Exigir cuenta de Exchange</value>
  </data>
</root>